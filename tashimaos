#!/usr/bin/env bash
#
#   _________   _____ __  ________  ______       ____  _____
#  /_  __/   | / ___// / / /  _/  |/  /   |     / __ \/ ___/
#   / / / /| | \__ \/ /_/ // // /|_/ / /| |    / / / /\__ \ 
#  / / / ___ |___/ / __  // // /  / / ___ |   / /_/ /___/ / 
# /_/ /_/  |_/____/_/ /_/___/_/  /_/_/  |_|   \____//____/  
#
# NAME: TASHIMA OS
# DESC: An installation and deployment script for Tashima's i3wm desktop.
# WARNING: Run this script at your own risk.
# DEPENDENCIES: dialog

echo "  _________   _____ __  ________  ______       ____  _____"
echo " /_  __/   | / ___// / / /  _/  |/  /   |     / __ \/ ___/"
echo "  / / / /| | \__ \/ /_/ // // /|_/ / /| |    / / / /\__ \ "
echo " / / / ___ |___/ / __  // // /  / / ___ |   / /_/ /___/ / "
echo "/_/ /_/  |_/____/_/ /_/___/_/  /_/_/  |_|   \____//____/  "

if [ "$(id -u)" = 0 ]; then
    echo "##################################################################"
    echo "This script MUST NOT be run as root user since it makes changes"
    echo "to the \$HOME directory of the \$USER executing this script."
    echo "The \$HOME directory of the root user is, of course, '/root'."
    echo "We don't want to mess around in there. So run this script as a"
    echo "normal user. You will be asked for a sudo password when necessary."
    echo "##################################################################"
    exit 1
fi

error() { \
    clear; printf "ERROR:\\n%s\\n" "$1" >&2; exit 1;
}

echo "################################################################"
echo "## Syncing the repos and installing 'dialog' if not installed ##"
echo "################################################################"
#sudo pacman --noconfirm --needed -Sy dialog || error "Error syncing the repos."

welcome() { \
    dialog --colors --title "\Z1\ZbInstalling Tashima OS!" \
    --msgbox "\Z3This script will install my apps and configurations in a EndeavourOS Atlantis Sway edition distro, you shouldn't run it on any other distro, as it will probably not work.\
                \\n\\n-Pedro Tashima" 16 60

    dialog --colors --title "\Z1\ZbStay near your computer!" \
    --yes-label "Continue" \
    --no-label "Exit" \
    --yesno "\Z3This script is not allowed to be run as root, \
            but you will be asked to enter your sudo password at various points during this installation. \
            This is to give PACMAN the necessary permissions to install the software. \
            So stay near the computer." 8 60
}

welcome || error "User choose to exit."

lastchance() { \
    dialog --colors --title "\Z1\ZbInstalling Tashima OS!" \
    --msgbox "\Z3WARNING! The Tashima OS installation script is currently in public beta testing. \
    There are almost certainly errors in it; \
    therefore, it is strongly recommended that you DO NOT install this on production machines. \
    It is recommended that you try this out in either a virtual machine or on a test machine." 16 60

    dialog --colors --title "\Z1\ZbAre You Sure You Want To Do This?" \
    --yes-label "Begin Installation" \
    --no-label "Exit" \
    --yesno "\Z3Shall we begin installing Tashima OS?" 8 60 || { exit 1; }
}

lastchance || error "User choose to exit."


# Let's install each package listed in the pkglist.txt file.
sudo pacman --needed --ask 4 -Sy - < pkglist.txt
yay -Sy - < aur-pkglist.txt
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
bash <(curl https://raw.githubusercontent.com/Tashima42/pomo/main/install-pomo-sound.sh)
curl https://raw.githubusercontent.com/Tashima42/pmsh/main/install.sh | bash
curl https://raw.githubusercontent.com/Tashima42/blum/main/blum.sh > ~/.local/bin/blum && sudo chmod +x ~/.local/bin/blum 
curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh

echo "################################################################"
echo "##                 Creating projects folders                  ##"
echo "################################################################"
mkdir -p ~/projects
mkdir -p ~/projects/personal
mkdir -p ~/projects/study
mkdir -p ~/projects/work

#sudo groupadd docker
#sudo usermod -aG docker $USER
#newgrp docker
#mkdir -p ~/.config/environment.d

echo "################################################################"
echo "##     Copying Tashima OS configuration files into \$HOME     ##"
echo "################################################################"
# nvim
mkdir -p ~/.config/nvim
mv ~/.config/nvim/init.vim ~/.config/nvim/init.vim.old
\cp assets/.config/nvim/init.vim ~/.config/nvim/init.vim
mv ~/.config/nvim/coc-settings.json ~/.config/nvim/coc-settings.json.old
\cp assets/.config/nvim/coc-settings.json ~/.config/nvim/coc-settings.json

# Gesture scripts for touchpad shortcuts
mkdir -p ~/.config/sway/scripts/gestures
\cp -r assets/.config/sway/scripts/gestures ~/.config/sway/scripts

# sway configs
mv ~/.config/sway/config.d ~/.config/sway/config.d.old
cp -r assets/.config/sway/config.d ~/.config/sway/config.d

# waybar configs
mv ~/.config/waybar/config ~/.config/waybar/config.old
\cp assets/.config/waybar/config ~/.config/waybar/config
mv ~/.config/waybar/style.css ~/.config/waybar/style.css.old
\cp assets/.config/waybar/style.css ~/.config/waybar/style.css

# wofi configs
mv ~/.config/wofi/style.css ~/.config/wofi/style.css.old
\cp assets/.config/wofi/style.css ~/.config/wofi/style.css

echo "###############################"
echo "##     Setting wallpapers    ##"
echo "###############################"
mv ~/.config/sway/sway.png ~/.config/sway/sway.png.old
mv ~/.config/sway/swaylock.png ~/.config/sway/swaylock.png.old
\cp assets/backgrounds/jotaro-disk.png ~/.config/sway/sway.png
\cp assets/backgrounds/jotaro-disk.png ~/.config/sway/swaylock.png

# Change all scripts in .local/bin to be executable.
find $HOME/.local/bin -type f -print0 | xargs -0 chmod 775

cat assets/bashrc-user-configs-sway >> $HOME/.bashrc

echo "###################################"
echo "## TashimaOS has been installed! ##"
echo "###################################"

while true; do
    read -p "Do you want to reboot to get your TashimaOS? [Y/n] " yn
    case $yn in
        [Yy]* ) reboot;;
        [Nn]* ) break;;
        "" ) reboot;;
        * ) echo "Please answer yes or no.";;
    esac
done
